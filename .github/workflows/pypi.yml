name: Publish to PyPI

on:
  push:
    tags: ["v*.*.*"]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show tree (debug)
        run: |
          pwd
          ls -la
          test -f pyproject.toml || (echo "pyproject.toml not found in CWD" && exit 1)

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Clean dist
        run: rm -rf dist

      - name: Build (PEP 517)
        # Build runs in isolated env using build-system.requires from pyproject.toml
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
          python -m build

      - name: Show wheel METADATA (debug)
        run: |
          python - <<'PY'
          import zipfile, glob, os
          wheels = sorted(glob.glob("dist/*.whl"))
          if not wheels:
              raise SystemExit("No wheels in dist/")
          wheel = wheels[-1]
          with zipfile.ZipFile(wheel) as zf:
              meta = [n for n in zf.namelist() if n.endswith(".dist-info/METADATA")]
              if not meta:
                  raise SystemExit(f"No METADATA found in {wheel}")
              data = zf.read(meta[0]).decode("utf-8", "replace")
              print("=== WHEEL:", os.path.basename(wheel), "===\n")
              print("\n".join(data.splitlines()[:30]))
          PY

      - name: Twine check (only real dists)
        run: |
          python -m twine check dist/*.whl dist/*.tar.gz

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.10.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
